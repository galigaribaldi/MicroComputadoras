 def_fun mdpat1sush(velson as single,bitdisp as byte,biteco as byte,bcf as byte) as single

  'Retorna la distancia entre el sensor hc-src y un obstáculo delante de éste,
  'para esto se usa la interrupción de overflow del temporizador 1 del MCU.

  'bitdisp define el bit del puerto A que recibe del MCU la señal de disparo.
  'biteco define el bit del puerto A que presenta al MCU la señal de eco implicada.

  'Si bcf=0, inicializa recursos del puerto A y temporizador 1 que se requieren.
  'Si bcf <> 0, se efectúa la medición y se retorna el valor de la distancia implicada.

  'Si uno o varios de los tres primeros parámetros argumento es inválido cuando
  'el parámetro bcf es 1, retorna el valor -1.

  'Configura el temporizador 1 para de modo que Tovf= 10 us. 
  'Usa una rutina de interrupción denominada servovft1.

defvarbptr ptad &h0
defvarbptr ptadd &h1
defvarbptr ptape &h1840
defvarbptr tpm1sc &h20
defvarbptr tpm1cnth &h21
defvarbptr tpm1modh &h23
defvarbptr tpm1modl &h24
'................................................

dim maskdis,maskeco,maskdisinv as byte

    if velson < 0 then
    'Checa por parámetros inválidos
    'si es el caso sale retornando el valor -1
     mdpat1sush = -1.
     exit_fun
    
    elseif bitdisp<0 or bitdisp>7 then
     mdpat1sush = -1.
     exit_fun

    elseif biteco<0 or biteco>7 then
     mdpat1sush = -1.
     exit_fun

    endif

     'calcula mascaras
    if bitdisp=7 then
    maskdis=-128
    maskdisinv=127
    else
    maskdis=2^bitdisp
    maskdisinv=-(maskdis+1)
    endif

    if biteco=7 then
    maskeco=-128
    else
    maskeco=2^biteco
    endif
 

    if bcf=0 then
    'inicializa recursos del MCU requeridos
    ptape=maskeco 'biteco del puerto A tiene pull-up'
    ptadd= maskdis 'bitdisp del puerto A es salida,va a ser señal de disparo
    'Configura temporizador 1 para Tovf=10 us
    tpm1sc=&h08 'pe=1,toie=0
    tpm1modh=&h00 'Tovf = 10 us
    tpm1modl=&hc8

    mdpat1sush = -1.
    exit_fun

    endif

     'Inicia medición

       contus = 0

       iniens
   ' Lanza pulso de disparo
       lda ptad
       ora maskdis
       sta ptad 'bitdisp <-- 1
       jsr retap10us
       lda ptad
       and maskdisinv
       sta ptad 'bitdisp <-- 1
  ' fin de pulso de disparo 
       bra espb0

retap10us: pshh
           pshx
           ldhx #$0012
vuelta:    nop
           nop
           aix #$ff
           cphx #$0000
           bne vuelta
           pulx
           pulh  
           rts 
 
   'Espera por flanco de subida de pulso eco
espb0:     lda ptad
           bit maskeco
           beq espb0
    '........................................
   
           sta tpm1cnth ' inicializa contador del TPM1
           lda tpm1sc
           ora #$40
           sta tpm1sc 'toie <-- 1


   'Espera por flanco de bajada de pulso eco
espb1:     lda ptad
           bit maskeco
           bne espb1
    '........................................
           lda tpm1sc
           and #$bf
           sta tpm1sc 'toie <-- 0

          finens

       mdpat1sush= 0.5*velson*1.e-5*contus
   
        end_fun

   def_subint servovft1()
     
        iniens
tpm1scp equ $20

        pshh
        lda tpm1scp
        bclr 7,tpm1scp
        ldhx contus
        aix #$01
        sthx contus 'contus=contus + 1
        pulh

        finens
  


    end_subint

int#(011) servovft1 'Colocación de vector asociado

